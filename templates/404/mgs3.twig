{#
    Copyright (C) 2018  GoodOldDownloads

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=no, user-scalable=no">
    <title>A Hideo Kojima 404 Page - Tactical 404 Operations - Designed by Hideo Kojima</title>
    {{ loadJS(['/static/js/modernizr-autoplay.js'], []) }}
    <style>
    /* 
        RESET ALL THE THINGS
    */
    * { box-sizing: border-box;
        user-select: none;
        -moz-user-select: none;
        -webkit-user-select: none;
        margin: 0;
        padding: 0;
        border: 0;
        font-size: 100%;
        font: inherit;
        vertical-align: baseline;
    }
    html, body {
        width: 100%;
        height: 100%;
    }
    body {
        line-height: 1;
        background: #FFFDF1;
        overflow: hidden;
    }
    body::before {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgb(120, 65, 0, .5);
        -webkit-transition: opacity 1000ms ease;
        -o-transition: opacity 1000ms ease;
        transition: opacity 1000ms ease;
        opacity: 0;
        z-index: -1;
    }
    body.fade::before {
        opacity: 1;
    }
    .bars {
        opacity: 0;
        background: rgba(0,0,0,.85);
        -webkit-transition: opacity 700ms ease-out;
        -o-transition: opacity 700ms ease-out;
        transition: opacity 700ms ease-out;
    }
    .bars::before {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        width: 100%;
        height: 8.33333333333%;
        background: inherit;
        -webkit-transition: -webkit-transform 300ms ease-out 1s;
        transition: -webkit-transform 300ms ease-out 1s;
        -o-transition: transform 300ms ease-out 1s;
        transition: transform 300ms ease-out 1s;
        transition: transform 300ms ease-out 1s, -webkit-transform 300ms ease-out 1s;
        z-index: -1;
    }
    .bars::after {
        content: '';
        display: block;
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 25%;
        background: inherit;
        -webkit-transition: -webkit-transform 300ms ease-out 1s;
        transition: -webkit-transform 300ms ease-out 1s;
        -o-transition: transform 300ms ease-out 1s;
        transition: transform 300ms ease-out 1s;
        transition: transform 300ms ease-out 1s, -webkit-transform 300ms ease-out 1s;
        z-index: -1;
    }
    .bars::before {
        -webkit-transform: translateY(-40%);
            -ms-transform: translateY(-40%);
                transform: translateY(-40%);
    }
    .bars::after {
        -webkit-transform: translateY(40%);
            -ms-transform: translateY(40%);
                transform: translateY(40%);
    }
    body.fade .bars {
        opacity: 1;
    }
    body.fade .bars::before,
    body.fade .bars::after {
        -webkit-transform: translateY(0);
            -ms-transform: translateY(0);
                transform: translateY(0);
    }
    .buttons {
        position: absolute;
        top: 75%;
        right: 15%;
        font-family: "Open Sans", "Roboto", sans-serif;
        font-weight: 600;
        padding-top: 20px;
        opacity: 0;
    }
    body.fade .buttons {
        opacity: 1;
        -webkit-transition: opacity 400ms ease 1500ms;
        -o-transition: opacity 400ms ease 1500ms;
        transition: opacity 400ms ease 1500ms;
    }
    .buttons a {
        position: relative;
        color: #dddcbe;
        display: block;
        font-size: 24px;
        text-decoration: none;
        padding-bottom: 10px;
        padding-left: 50px;
        opacity: .75;
    }
    @media (min-width: 576px) {
        .buttons a {
            display: inline-block;
        }
        .buttons a:first-of-type {
            padding-right: 100px;
        }
    }
    .buttons a:before {
        content: '';
        display: inline-block;
        position: absolute;
        width: 23px;
        height: 20px;
        left: 0;
        top: 2px;
        visibility: hidden;
        background: #dddcbe;
    }
    .buttons a:hover:before {
        visibility: visible;
    }
    .buttons a:hover {
        opacity: 1;
    }
    #letters-wrap {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-pack: center;
            -ms-flex-pack: center;
                justify-content: center;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        position: relative;
        width: 100%;
        height: 66.6666666667%;
        top: 8.33333333333%;
    }
    #main {
        display: block;
        position: absolute;
        max-width: 80%;
        height: auto;
        z-index: 5;
    }
    #video-death {
        /* can't use display: none; or opacity or visibility cause some browsers won't autoplay the video */
        position: absolute;
        bottom: -500px;
        right: -500px;
        z-index: -99999;
    }
    </style>
</head>
<body>
    <div id="letters-wrap">
        <canvas id="main"></canvas>
    </div>
    <div class="bars">
        <div class="buttons">
            <a href="/" id="continue">CONTINUE</a>
            <a href="#" id="exit">EXIT</a>
        </div>
    </div>
    <iframe id="video-death" width="5" height="5" src="https://www.youtube.com/embed/XQSj3R3Hr38?enablejsapi=1" frameborder="0" allow="autoplay; encrypted-media"></iframe>
    <script type="text/javascript">
        var text = "404-PAGE IS DEAD";
        var sheetDefs = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,.-;:_?!#+ ";
        var textPadding = 20;
        var canvas = document.getElementById('main');
        var context = canvas.getContext('2d');
        canvas.width = (text.length*28)+(text.length*textPadding);
        canvas.height = 35;

        var tabWaiter;
        var audio = document.getElementById('video-death');

        var spriteSheet = new Image();
        spriteSheet.onload = function(){
            if (Modernizr.videoautoplay) {
                audio.addEventListener('load', function() {
                    console.info('Video frame loaded');
                    // Some browsers stop autoplay if on another tab
                    tabWaiter = setInterval(function(){
                        // Tell youtube to send messages
                        audio.contentWindow.postMessage('{"event":"listening","id":"video-death"}', '*');
                        // Set lowest quality
                        audio.contentWindow.postMessage('{"event":"command","func":"setPlaybackQuality","args":["small"]}', "*");
                        // Play
                        audio.contentWindow.postMessage('{"event":"command","func":"playVideo"}', "*");
                        // Mute if browser has strict autoplaying rules
                        
                        audio.contentWindow.postMessage('{"event":"command","func":"unMute"}', "*");
                        audio.contentWindow.postMessage('{"event":"command","func":"setVolume","args":["100"]}', "*");
                    }, 200);
                });
            } else {
                // Do animations immediately if no autoplay audio support
                fadeBG();
                initText();
            }
        };
        spriteSheet.src = '/static/img/404/mgs3/letters.png';

        document.getElementById('exit').addEventListener('click', function(evt){
            evt.preventDefault();
            window.history.back();
        }, false);
        document.getElementById('continue').addEventListener('click', function(evt){
            //evt.preventDefault();
        }, false);
        window.addEventListener('message', function(evt){
            var YTData = JSON.parse(evt.data);
            if (YTData.event === 'onReady') {
                clearInterval(tabWaiter);
            }
            // Fade body when player starts
            if (YTData.info !== null && typeof(YTData.info.currentTime) !== 'undefined') {
                // More reliabe than onReady
                if (YTData.info.currentTime > 0) {
                    fadeBG();
                }
                // Takes a while for typing sounds to play
                if (YTData.info.currentTime >= 1) {
                    initText();
                }
                // Stop video before gun sound
                if (YTData.info.currentTime >= 56) {
                    audio.contentWindow.postMessage('{"event":"command","func":"stopVideo"}', "*");
                }
            }
        }, false);
        var noopfunc = function(){};
        var fadeBG = function(){
            fadeBG = noopfunc;
            document.getElementsByTagName('body')[0].classList.add('fade');
        };
        var initText = function(){
            initText = noopfunc;
            for (var i = 0; i < text.split('').length; i++) {
                var letter = text.split('')[i];
                var letterIndex = sheetDefs.indexOf(letter);
                drawLetterTimeout(letterIndex, i);
            }
        };
        var drawLetterTimeout = function(letterIndex, i){
            setTimeout(function(){
                context.drawImage(spriteSheet, letterIndex*28, 0, 28, 35, (28+textPadding)*i+2, 0, 28, 35);
            }, 120*i);
        };
    </script>
</body>
</html>